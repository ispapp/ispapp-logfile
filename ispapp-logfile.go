package main

import (
	"flag"
	"log"
	"fmt"
	"net/url"
	"os"
	"os/signal"
	"github.com/gorilla/websocket"
	"crypto/x509"
	"crypto/tls"
	"encoding/hex"
	"encoding/json"
	"encoding/base64"
	"time"
)

type LogEntry struct {
	Ts			uint64		`json:"ts"`
	Hostname		string		`json:"hostName"`
	Hr			string		`json:"hr"`
	Partial			string		`json:"partial_msg"`
}

var ca_bundle_hex string = ""

var domain string = ""
var sessionKey string = ""

func main() {

	fmt.Println("USAGE:")
	fmt.Println("\tgo run ispapp-log.go -domain demo.ispapp.co -sessionKey \"asdf\"\n\n")

	flag.StringVar(&domain, "domain", "", "ISPApp Instance Domain")
	flag.StringVar(&sessionKey, "sessionKey", "", "ISPApp Session Key")

	flag.Parse()

	if (domain == "" || sessionKey == "") {
		os.Exit(1)
	}

	interrupt := make(chan os.Signal, 1)
	signal.Notify(interrupt, os.Interrupt)

	u, url_err := url.Parse("wss://" + domain + ":8550/ws_log?sessionKey=" + sessionKey)

	if (url_err != nil) {
		fmt.Println("url parsing error", url_err)
		os.Exit(1)
	}

	go new_websocket(u)

	for {

		select {
			// wait for interrupt
		case <-interrupt:
			fmt.Println("close")
			os.Exit(0)
		}

	}

}

func new_websocket(u *url.URL) {

	fmt.Printf("connecting to %s\n", u.String())

	roots := x509.NewCertPool()

	if (ca_bundle_hex != "") {

		// use the hex data in this file
		// convienent for distributing binary files
		// because often operating systems do not include ca files

		ca_s, _ := hex.DecodeString(ca_bundle_hex)
		ok := roots.AppendCertsFromPEM(ca_s)
		if !ok {
			log.Fatal("failed to parse root certificate")
		}

	}

	d := websocket.Dialer{TLSClientConfig: &tls.Config{RootCAs: roots}}

	c, _, err := d.Dial(u.String(), nil)

	if err != nil {
		fmt.Println("dial:", err)
		fmt.Println("reconnecting")
		time.Sleep(5 * time.Second)
		new_websocket(u)
	}
	defer c.Close()

	// this is the read loop
	for {

		if (c == nil) {
			return
		}

		_, message, err := c.ReadMessage()
		if err != nil {
			// kill the read loop then force a reconnect
			// or have missing data
			fmt.Println("error reading wss response", err)
			break
		}

		//fmt.Printf("\nrecv: %s\n", message)

		var le LogEntry

		err = json.Unmarshal(message, &le)
		if (err != nil) {
			fmt.Printf("error decoding json: %s\n", err.Error())
		}

		decoded_hr, _ := base64.URLEncoding.DecodeString(le.Hr)

		ts := time.Unix(int64(le.Ts), 0)

		fmt.Println("Host: ", le.Hostname, "\t", ts, "\t", "\tIncoming Data: ", string(decoded_hr), le.Partial)

	}

	// force a reconnect after 5 seconds
	fmt.Println("reconnecting")
	time.Sleep(5 * time.Second)
	new_websocket(u)

}
